#summary AiBridge - G> Creating ListPickers that have either Checkboxes or Radiobuttons

= Introduction =
An example to show how to create list pickers that have either Checkboxes or RadioButtons. 

* NOTE: * This is currently included in the NightlyBuild and will later be in the next official release


= Details =

Now, you can create a list that includes Checkboxes OR Radiobuttons. Setup and initialization is pretty much like usual ListPicker. See download section (ListPickerCbRbActivity.java ) for full code example. Here is how output looks like:
<br >[http://www.3nportal.com/wikiImages/listPicker.jpg]

<code>
...
public class ListPickerCbRbActivity extends Form implements HandlesEventDispatching {
...
...
    //Declare 2 ListPickerCheckbox, one for checkbox, the other for radio button examples
    //These are like buttons
    ListPickerCheckbox listPickerCheckboxMulti;
    ListPickerCheckbox listPickerCheckboxRb;

    //A textbox used for debug purpose
    TextBox txtResults;
...
...
    //create the layout
    void $define() {
        
        //init visual components
        listPickerCheckboxMulti = new ListPickerCheckbox(this);
        listPickerCheckboxRb = new ListPickerCheckbox(this);

        //Setup the text to display in the listpicker buttons
        listPickerCheckboxMulti.Text("Click to open the checkboxes style");
        listPickerCheckboxRb.Text("Click to open the radio button style");

        //Load some default values to display in the listpicker
        String[] strArray = {"item1", "item2", "item3"};
        YailList yailList = YailList.makeList(strArray);

        //Set the above items into our sample listpickers. We are setting same items into 
        //both of our listpickers
        listPickerCheckboxMulti.Elements(yailList);
        listPickerCheckboxRb.Elements(yailList);

        //Use SelectionStlye to specify if we want multi (checkbox) or single (radtio button)
        listPickerCheckboxMulti.SelectionStlye(Component.MULTIPLE_CHOICE);
        listPickerCheckboxRb.SelectionStlye(Component.SINGLE_CHOICE);

        //for debug purpose, we display results from our listpicker in this text box
        txtResults = new TextBox(this, "Results display here", Component.LENGTH_FILL_PARENT);
        
        //hide our softkeyboard
        hideSoftKeyboard();

        //register for these events
        EventDispatcher.registerEventForDelegation(this, "test", "Click");
        EventDispatcher.registerEventForDelegation(this, "test", "AfterPicking");
...
...
    }

</code>
Now trap these events in our dispatchEvent like below:
<code>
    @Override
    public boolean dispatchEvent(Component component, String id, String eventName, Object[] args) {

        if (eventName.equals("Click")) {
            //A visual component was clicked
            if (component.equals(listPickerCheckboxMulti)) {
                //we want to open listpicker in checkbox style
                listPickerCheckboxMulti.Open();
                return true;
            } else if (component.equals(listPickerCheckboxRb)) {
                //we want to open listpicker in radiobutton style
                listPickerCheckboxRb.Open();
                return true;
            }

            return false;

        } else if (eventName.equals("AfterPicking") && component.equals(listPickerCheckboxMulti)) {
            //Get list of selection results. The Selections() will return boolean array of true or false for each
            //list item
            boolean[] selections = listPickerCheckboxMulti.Selections();

            //code below shows how to check and see if 3rd item is checked or not 
            //NOTE that 1st element starts at position 0 
            if (selections[2]) {
                //3rd item was checked, do proper logic here
            } else {
                //3rd item was NOT checked, do proper logic here
            }
            //Now, convert our boolean array into string for displaying result into our textbox field
            //display results in our text box
            txtResults.Text(Arrays.toString(selections));
        }

        return false;
    }
...
...
</code>

*NOTE:* You must include the following permission in your androidmanifest:

<activity android:name="com.google.devtools.simple.runtime.components.android.ListPickerCheckboxActivity" />